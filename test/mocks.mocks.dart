// Mocks generated by Mockito 5.4.6 from annotations
// in myapp/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myapp/services/networking_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [PacketService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPacketService extends _i1.Mock implements _i2.PacketService {
  MockPacketService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.Uint8List> get onData =>
      (super.noSuchMethod(
            Invocation.getter(#onData),
            returnValue: _i3.Stream<_i4.Uint8List>.empty(),
          )
          as _i3.Stream<_i4.Uint8List>);

  @override
  _i3.Stream<String> get onLog =>
      (super.noSuchMethod(
            Invocation.getter(#onLog),
            returnValue: _i3.Stream<String>.empty(),
          )
          as _i3.Stream<String>);

  @override
  _i3.Stream<String> get onState =>
      (super.noSuchMethod(
            Invocation.getter(#onState),
            returnValue: _i3.Stream<String>.empty(),
          )
          as _i3.Stream<String>);

  @override
  bool get running =>
      (super.noSuchMethod(Invocation.getter(#running), returnValue: false)
          as bool);

  @override
  _i3.Future<void> start(_i2.PacketServiceConfig? config) =>
      (super.noSuchMethod(
            Invocation.method(#start, [config]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> stop() =>
      (super.noSuchMethod(
            Invocation.method(#stop, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  void sendBytes(_i4.Uint8List? bytes) => super.noSuchMethod(
    Invocation.method(#sendBytes, [bytes]),
    returnValueForMissingStub: null,
  );

  @override
  void sendText(String? text) => super.noSuchMethod(
    Invocation.method(#sendText, [text]),
    returnValueForMissingStub: null,
  );
}
